package ${package}.service.impl;

import ${package}.model.${modelName};
import ${package}.dao.${modelName}Dao;
import ${package}.service.${modelName}Service;
import ${package}.util.enums.${modelName}StatEnum;
import com.hshc.basetools.log.LogUtil;
import com.hshc.basetools.model.Res;
import com.hshc.commonbase.dto.base.UserDTO;
import com.hshc.ws.common.UniqueCodeUtils;
import com.hshc.ws.common.hbase.history.BussTypeEnum;
import com.hshc.ws.common.hbase.history.OperationTypeEnum;
import com.hshc.ws.util.enums.DeleteStatEnum;
import com.hshc.ws.util.Constants;
import com.hshc.ws.common.hbase.history.OperationUtils;

import java.util.List;
import java.lang.Long;
import java.lang.Integer;
import java.util.Date;

import org.springframework.stereotype.Service;
import org.springframework.beans.factory.annotation.Autowired;

/**
* ${modelRemark} Service
* @author ${author}
* @project ${project}
* @date  ${now?datetime}
*/
@Service("${modelName?uncap_first}Service")
public class ${modelName}ServiceImpl implements ${modelName}Service {

    <#assign dao=modelName?uncap_first+"Dao" >
    @Autowired
    private ${modelName}Dao ${dao};


    @Override
    public List<${modelName}> getList(${modelName} ${modelName?uncap_first}) {
        return ${dao}.getList(${modelName?uncap_first});
    }

    @Override
    public Object insert(${modelName} ${modelName?uncap_first}, UserDTO user) {
        Date current = new Date();
        Long id = UniqueCodeUtils.getUniqueCode(UniqueCodeUtils.BUSTYPE_${modelName}_ID);
        String code = UniqueCodeUtils.getBussIncrCode(UniqueCodeUtils.BUSTYPE_${modelName}_CODE);

        ${modelName?uncap_first}.setId(id);
        ${modelName?uncap_first}.setCreateTime(current);
        ${modelName?uncap_first}.setCreateEmp(user.getName());
        ${modelName?uncap_first}.setCreateEmpId(user.getId());
        ${modelName?uncap_first}.setModifyTime(current);
        ${modelName?uncap_first}.setModifyEmp(user.getName());
        ${modelName?uncap_first}.setModifyEmpId(user.getId());
        ${modelName?uncap_first}.setDelFlag(DeleteStatEnum.NO.getCode());
        ${modelName?uncap_first}.setVersion(Constants.VERSION_START_VAL);

        int row = ${dao}.insert(${modelName?uncap_first});
        if (row != 1) {
            return Res.err("新增失败");
        } else {
            LogUtil.getLog(${modelName}ServiceImpl.class).info("新增成功[id={}]", ${modelName?uncap_first}.getId());
            OperationUtils.save(${modelName?uncap_first}.getId(), BussTypeEnum.${modelName}, user, OperationTypeEnum.CREATE, current,
            ${modelName}StatEnum.SUBMIT);
            return Res.suc();
        }
    }

    @Override
    public Object update(${modelName} ${modelName?uncap_first}, UserDTO user) {
        ${modelName} db${modelName?uncap_first} = ${dao}.getOne(${modelName?uncap_first}.getId());
        if (db${modelName?uncap_first} == null) {
            return Res.err("修改失败");
        }
        //TODO 加其他验证

        Date current = new Date();
        ${modelName?uncap_first}.setModifyTime(current);
        ${modelName?uncap_first}.setModifyEmp(user.getName());
        ${modelName?uncap_first}.setModifyEmpId(user.getId());

        int row = ${dao}.update(${modelName?uncap_first});
        if (row != 1) {
            return Res.err("修改失败");
        } else {
            LogUtil.getLog(${modelName}ServiceImpl.class).info("修改成功[id={}]", ${modelName?uncap_first}.getId());
            OperationUtils.save(${modelName?uncap_first}.getId(), BussTypeEnum.${modelName}, user, OperationTypeEnum.UPDATE, current,
            ${modelName}StatEnum.SUBMIT, db${modelName?uncap_first}, ${modelName?uncap_first});
            return Res.suc();
        }
    }

    @Override
    public Object delete(${modelName} ${modelName?uncap_first}, UserDTO user) {
        ${modelName} db${modelName?uncap_first} = ${dao}.getOne(${modelName?uncap_first}.getId());
        if (db${modelName?uncap_first} == null) {
            return Res.err("删除失败");
        }

        Date current = new Date();
        ${modelName?uncap_first}.setDelFlag(DeleteStatEnum.YES.getCode());
        ${modelName?uncap_first}.setModifyTime(current);
        ${modelName?uncap_first}.setModifyEmp(user.getName());
        ${modelName?uncap_first}.setModifyEmpId(user.getId());

        int row = ${dao}.update(${modelName?uncap_first});
        if (row != 1) {
            return Res.err("删除失败");
        } else {
            LogUtil.getLog(${modelName}ServiceImpl.class).info("删除成功[id={}]", ${modelName?uncap_first}.getId());
            OperationUtils.save(${modelName?uncap_first}.getId(), BussTypeEnum.${modelName}, user, OperationTypeEnum.DELETE, current,
            ${modelName}StatEnum.DELETE);
            return Res.suc();
        }
    }
}
